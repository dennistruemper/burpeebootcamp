module Evergreen.Migrate.V20 exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplement–µd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.app/docs/evergreen> for more info.

-}

import Evergreen.V19.Burpee
import Evergreen.V19.Main
import Evergreen.V19.Main.Pages.Model
import Evergreen.V19.Main.Pages.Msg
import Evergreen.V19.Pages.Counter
import Evergreen.V19.Pages.Home_
import Evergreen.V19.Pages.Menu
import Evergreen.V19.Pages.NotFound_
import Evergreen.V19.Pages.PickVariant
import Evergreen.V19.Pages.Results
import Evergreen.V19.Route.Path
import Evergreen.V19.Shared
import Evergreen.V19.Shared.Model
import Evergreen.V19.Shared.Msg
import Evergreen.V19.Types
import Evergreen.V19.WorkoutResult
import Evergreen.V20.Burpee
import Evergreen.V20.Main
import Evergreen.V20.Main.Pages.Model
import Evergreen.V20.Main.Pages.Msg
import Evergreen.V20.Pages.Counter
import Evergreen.V20.Pages.Counter.AMRAP
import Evergreen.V20.Pages.Counter.EMOM
import Evergreen.V20.Pages.Home_
import Evergreen.V20.Pages.Menu
import Evergreen.V20.Pages.NotFound_
import Evergreen.V20.Pages.PickVariant
import Evergreen.V20.Pages.Results
import Evergreen.V20.Route.Path
import Evergreen.V20.Shared
import Evergreen.V20.Shared.Model
import Evergreen.V20.Shared.Msg
import Evergreen.V20.Types
import Evergreen.V20.WorkoutResult
import Lamdera.Migrations exposing (..)
import List
import Maybe


frontendModel : Evergreen.V19.Types.FrontendModel -> ModelMigration Evergreen.V20.Types.FrontendModel Evergreen.V20.Types.FrontendMsg
frontendModel old =
    ModelMigrated ( migrate_Types_FrontendModel old, Cmd.none )


backendModel : Evergreen.V19.Types.BackendModel -> ModelMigration Evergreen.V20.Types.BackendModel Evergreen.V20.Types.BackendMsg
backendModel old =
    ModelUnchanged


frontendMsg : Evergreen.V19.Types.FrontendMsg -> MsgMigration Evergreen.V20.Types.FrontendMsg Evergreen.V20.Types.FrontendMsg
frontendMsg old =
    MsgMigrated ( migrate_Types_FrontendMsg old, Cmd.none )


toBackend : Evergreen.V19.Types.ToBackend -> MsgMigration Evergreen.V20.Types.ToBackend Evergreen.V20.Types.BackendMsg
toBackend old =
    MsgUnchanged


backendMsg : Evergreen.V19.Types.BackendMsg -> MsgMigration Evergreen.V20.Types.BackendMsg Evergreen.V20.Types.BackendMsg
backendMsg old =
    MsgUnchanged


toFrontend : Evergreen.V19.Types.ToFrontend -> MsgMigration Evergreen.V20.Types.ToFrontend Evergreen.V20.Types.FrontendMsg
toFrontend old =
    MsgUnchanged


migrate_Types_FrontendModel : Evergreen.V19.Types.FrontendModel -> Evergreen.V20.Types.FrontendModel
migrate_Types_FrontendModel old =
    old |> migrate_Main_Model


migrate_Types_FrontendMsg : Evergreen.V19.Types.FrontendMsg -> Evergreen.V20.Types.FrontendMsg
migrate_Types_FrontendMsg old =
    old |> migrate_Main_Msg


migrate_Burpee_Burpee : Evergreen.V19.Burpee.Burpee -> Evergreen.V20.Burpee.Burpee
migrate_Burpee_Burpee old =
    case old of
        Evergreen.V19.Burpee.Burpee p0 ->
            Evergreen.V20.Burpee.Burpee
                { name = p0.name
                , angle = p0.angle |> migrate_Burpee_GroundAngle
                , groundPart = p0.groundPart |> migrate_Burpee_GroundPart
                , topPart = p0.topPart |> migrate_Burpee_TopPart
                }


migrate_Burpee_GroundAngle : Evergreen.V19.Burpee.GroundAngle -> Evergreen.V20.Burpee.GroundAngle
migrate_Burpee_GroundAngle old =
    case old of
        Evergreen.V19.Burpee.HipInclined ->
            Evergreen.V20.Burpee.HipInclined

        Evergreen.V19.Burpee.KneeInclined ->
            Evergreen.V20.Burpee.KneeInclined

        Evergreen.V19.Burpee.LittleInclined ->
            Evergreen.V20.Burpee.LittleInclined

        Evergreen.V19.Burpee.Flat ->
            Evergreen.V20.Burpee.Flat

        Evergreen.V19.Burpee.LittleDecline ->
            Evergreen.V20.Burpee.LittleDecline

        Evergreen.V19.Burpee.KneeDecline ->
            Evergreen.V20.Burpee.KneeDecline


migrate_Burpee_GroundPart : Evergreen.V19.Burpee.GroundPart -> Evergreen.V20.Burpee.GroundPart
migrate_Burpee_GroundPart old =
    case old of
        Evergreen.V19.Burpee.Plank ->
            Evergreen.V20.Burpee.Plank

        Evergreen.V19.Burpee.MountainClimbers p0 ->
            Evergreen.V20.Burpee.MountainClimbers p0

        Evergreen.V19.Burpee.Pushups p0 ->
            Evergreen.V20.Burpee.Pushups p0

        Evergreen.V19.Burpee.NavySeals p0 ->
            Evergreen.V20.Burpee.NavySeals p0


migrate_Burpee_TopPart : Evergreen.V19.Burpee.TopPart -> Evergreen.V20.Burpee.TopPart
migrate_Burpee_TopPart old =
    case old of
        Evergreen.V19.Burpee.Jump ->
            Evergreen.V20.Burpee.Jump

        Evergreen.V19.Burpee.TuckJump ->
            Evergreen.V20.Burpee.TuckJump

        Evergreen.V19.Burpee.KneeRaise ->
            Evergreen.V20.Burpee.KneeRaise

        Evergreen.V19.Burpee.JumpingJack ->
            Evergreen.V20.Burpee.JumpingJack

        Evergreen.V19.Burpee.BoxJump ->
            Evergreen.V20.Burpee.BoxJump

        Evergreen.V19.Burpee.PullUp ->
            Evergreen.V20.Burpee.PullUp

        Evergreen.V19.Burpee.NoOp ->
            Evergreen.V20.Burpee.NoOp


migrate_Main_Model : Evergreen.V19.Main.Model -> Evergreen.V20.Main.Model
migrate_Main_Model old =
    { key = old.key
    , url = old.url
    , page = old.page |> migrate_Main_Pages_Model_Model
    , layout = old.layout
    , shared = old.shared |> migrate_Shared_Model
    }


migrate_Main_Msg : Evergreen.V19.Main.Msg -> Evergreen.V20.Main.Msg
migrate_Main_Msg old =
    case old of
        Evergreen.V19.Main.UrlRequested p0 ->
            Evergreen.V20.Main.UrlRequested p0

        Evergreen.V19.Main.UrlChanged p0 ->
            Evergreen.V20.Main.UrlChanged p0

        Evergreen.V19.Main.Page p0 ->
            Evergreen.V20.Main.Page (p0 |> migrate_Main_Pages_Msg_Msg)

        Evergreen.V19.Main.Layout p0 ->
            Evergreen.V20.Main.Layout p0

        Evergreen.V19.Main.Shared p0 ->
            Evergreen.V20.Main.Shared (p0 |> migrate_Shared_Msg)

        Evergreen.V19.Main.Batch p0 ->
            Evergreen.V20.Main.Batch (p0 |> List.map migrate_Main_Msg)


migrate_Main_Pages_Model_Model : Evergreen.V19.Main.Pages.Model.Model -> Evergreen.V20.Main.Pages.Model.Model
migrate_Main_Pages_Model_Model old =
    case old of
        Evergreen.V19.Main.Pages.Model.Home_ p0 ->
            Evergreen.V20.Main.Pages.Model.Home_ (p0 |> migrate_Pages_Home__Model)

        Evergreen.V19.Main.Pages.Model.Counter p0 ->
            Evergreen.V20.Main.Pages.Model.Counter (p0 |> migrate_Pages_Counter_Model)

        Evergreen.V19.Main.Pages.Model.Menu p0 ->
            Evergreen.V20.Main.Pages.Model.Menu (p0 |> migrate_Pages_Menu_Model)

        Evergreen.V19.Main.Pages.Model.PickVariant p0 ->
            Evergreen.V20.Main.Pages.Model.PickVariant (p0 |> migrate_Pages_PickVariant_Model)

        Evergreen.V19.Main.Pages.Model.Results p0 ->
            Evergreen.V20.Main.Pages.Model.Results (p0 |> migrate_Pages_Results_Model)

        Evergreen.V19.Main.Pages.Model.NotFound_ p0 ->
            Evergreen.V20.Main.Pages.Model.NotFound_ (p0 |> migrate_Pages_NotFound__Model)

        Evergreen.V19.Main.Pages.Model.Redirecting_ ->
            Evergreen.V20.Main.Pages.Model.Redirecting_

        Evergreen.V19.Main.Pages.Model.Loading_ ->
            Evergreen.V20.Main.Pages.Model.Loading_


migrate_Main_Pages_Msg_Msg : Evergreen.V19.Main.Pages.Msg.Msg -> Evergreen.V20.Main.Pages.Msg.Msg
migrate_Main_Pages_Msg_Msg old =
    case old of
        Evergreen.V19.Main.Pages.Msg.Home_ p0 ->
            Evergreen.V20.Main.Pages.Msg.Home_ (p0 |> migrate_Pages_Home__Msg)

        Evergreen.V19.Main.Pages.Msg.Counter p0 ->
            Evergreen.V20.Main.Pages.Msg.Counter (p0 |> migrate_Pages_Counter_Msg)

        Evergreen.V19.Main.Pages.Msg.Menu p0 ->
            Evergreen.V20.Main.Pages.Msg.Menu (p0 |> migrate_Pages_Menu_Msg)

        Evergreen.V19.Main.Pages.Msg.PickVariant p0 ->
            Evergreen.V20.Main.Pages.Msg.PickVariant (p0 |> migrate_Pages_PickVariant_Msg)

        Evergreen.V19.Main.Pages.Msg.Results p0 ->
            Evergreen.V20.Main.Pages.Msg.Results (p0 |> migrate_Pages_Results_Msg)

        Evergreen.V19.Main.Pages.Msg.NotFound_ p0 ->
            Evergreen.V20.Main.Pages.Msg.NotFound_ (p0 |> migrate_Pages_NotFound__Msg)


migrate_Pages_Counter_AMRAP_AMRAPSettings : Evergreen.V19.Pages.Counter.AMRAPSettings -> Evergreen.V20.Pages.Counter.AMRAP.AMRAPSettings
migrate_Pages_Counter_AMRAP_AMRAPSettings old =
    { duration = old.duration
    , startTime = old.startTime
    , currentTime = old.currentTime
    , status = old.status |> migrate_Pages_Counter_AMRAP_AMRAPStatus
    , showSettings = old.showSettings
    , previousBest = old.previousBest
    }


migrate_Pages_Counter_AMRAP_AMRAPStatus : Evergreen.V19.Pages.Counter.AMRAPStatus -> Evergreen.V20.Pages.Counter.AMRAP.AMRAPStatus
migrate_Pages_Counter_AMRAP_AMRAPStatus old =
    case old of
        Evergreen.V19.Pages.Counter.NotStarted ->
            Evergreen.V20.Pages.Counter.AMRAP.NotStarted

        Evergreen.V19.Pages.Counter.Running ->
            Evergreen.V20.Pages.Counter.AMRAP.Running

        Evergreen.V19.Pages.Counter.Finished ->
            Evergreen.V20.Pages.Counter.AMRAP.Finished


migrate_Pages_Counter_EMOM_EMOMMode : Evergreen.V19.Pages.Counter.EMOMMode -> Evergreen.V20.Pages.Counter.EMOM.EMOMMode
migrate_Pages_Counter_EMOM_EMOMMode old =
    case old of
        Evergreen.V19.Pages.Counter.FixedRounds ->
            Evergreen.V20.Pages.Counter.EMOM.FixedRounds

        Evergreen.V19.Pages.Counter.EndlessMode ->
            Evergreen.V20.Pages.Counter.EMOM.EndlessMode


migrate_Pages_Counter_EMOM_EMOMSettings : Evergreen.V19.Pages.Counter.EMOMSettings -> Evergreen.V20.Pages.Counter.EMOM.EMOMSettings
migrate_Pages_Counter_EMOM_EMOMSettings old =
    { startTime = old.startTime
    , repsPerMinute = old.repsPerMinute
    , totalRounds = old.totalRounds
    , currentRound = old.currentRound
    , status = old.status |> migrate_Pages_Counter_EMOM_EMOMStatus
    , showSettings = old.showSettings
    , currentTickTime = old.currentTickTime
    , mode = old.mode |> migrate_Pages_Counter_EMOM_EMOMMode
    }


migrate_Pages_Counter_EMOM_EMOMStatus : Evergreen.V19.Pages.Counter.EMOMStatus -> Evergreen.V20.Pages.Counter.EMOM.EMOMStatus
migrate_Pages_Counter_EMOM_EMOMStatus old =
    case old of
        Evergreen.V19.Pages.Counter.WaitingToStart ->
            Evergreen.V20.Pages.Counter.EMOM.WaitingToStart

        Evergreen.V19.Pages.Counter.InProgress ->
            Evergreen.V20.Pages.Counter.EMOM.InProgress

        Evergreen.V19.Pages.Counter.Complete ->
            Evergreen.V20.Pages.Counter.EMOM.Complete

        Evergreen.V19.Pages.Counter.Failed ->
            Evergreen.V20.Pages.Counter.EMOM.Failed


migrate_Pages_Counter_Model : Evergreen.V19.Pages.Counter.Model -> Evergreen.V20.Pages.Counter.Model
migrate_Pages_Counter_Model old =
    { currentReps = old.currentReps
    , overwriteRepGoal = old.overwriteRepGoal
    , initialShowWelcomeModal = old.initialShowWelcomeModal
    , groundTouchesForCurrentRep = old.groundTouchesForCurrentRep
    , sessionMode = old.sessionMode |> Maybe.map migrate_Pages_Counter_SessionMode
    , isMysteryMode = old.isMysteryMode
    , redirectTime = old.redirectTime
    , isDebouncing = old.isDebouncing
    , showHelpModal = old.showHelpModal
    , soundEnabled = True
    , lastWarningTime = Nothing
    }


migrate_Pages_Counter_Msg : Evergreen.V19.Pages.Counter.Msg -> Evergreen.V20.Pages.Counter.Msg
migrate_Pages_Counter_Msg old =
    case old of
        Evergreen.V19.Pages.Counter.IncrementReps ->
            Evergreen.V20.Pages.Counter.IncrementReps

        Evergreen.V19.Pages.Counter.ResetCounter ->
            Evergreen.V20.Pages.Counter.CloseHelpModal

        Evergreen.V19.Pages.Counter.GotWorkoutFinishedTime p0 ->
            Evergreen.V20.Pages.Counter.GotWorkoutFinishedTime p0

        Evergreen.V19.Pages.Counter.GetWorkoutFinishedTime ->
            Evergreen.V20.Pages.Counter.GetWorkoutFinishedTime

        Evergreen.V19.Pages.Counter.ChangeToMenu ->
            Evergreen.V20.Pages.Counter.ChangeToMenu

        Evergreen.V19.Pages.Counter.CloseWelcomeModal ->
            Evergreen.V20.Pages.Counter.CloseWelcomeModal

        Evergreen.V19.Pages.Counter.SelectMode p0 ->
            Evergreen.V20.Pages.Counter.SelectMode (p0 |> migrate_Pages_Counter_SessionMode)

        Evergreen.V19.Pages.Counter.GotWorkoutGoal p0 ->
            Evergreen.V20.Pages.Counter.GotWorkoutGoal p0

        Evergreen.V19.Pages.Counter.ConfigureEMOM p0 ->
            Evergreen.V20.Pages.Counter.ConfigureEMOM (p0 |> migrate_Pages_Counter_EMOM_EMOMSettings)

        Evergreen.V19.Pages.Counter.StartEMOM ->
            Evergreen.V20.Pages.Counter.StartEMOM

        Evergreen.V19.Pages.Counter.EMOMStarted p0 ->
            Evergreen.V20.Pages.Counter.EMOMStarted p0

        Evergreen.V19.Pages.Counter.EMOMTick p0 ->
            Evergreen.V20.Pages.Counter.EMOMTick p0

        Evergreen.V19.Pages.Counter.DebounceComplete p0 ->
            Evergreen.V20.Pages.Counter.DebounceComplete p0

        Evergreen.V19.Pages.Counter.ConfigureAMRAP p0 ->
            Evergreen.V20.Pages.Counter.ConfigureAMRAP (p0 |> migrate_Pages_Counter_AMRAP_AMRAPSettings)

        Evergreen.V19.Pages.Counter.StartAMRAP ->
            Evergreen.V20.Pages.Counter.StartAMRAP

        Evergreen.V19.Pages.Counter.AMRAPStarted p0 ->
            Evergreen.V20.Pages.Counter.AMRAPStarted p0

        Evergreen.V19.Pages.Counter.AMRAPTick p0 ->
            Evergreen.V20.Pages.Counter.AMRAPTick p0

        Evergreen.V19.Pages.Counter.ToggleHelpModal ->
            Evergreen.V20.Pages.Counter.ToggleHelpModal

        Evergreen.V19.Pages.Counter.CloseHelpModal ->
            Evergreen.V20.Pages.Counter.CloseHelpModal


migrate_Pages_Counter_SessionMode : Evergreen.V19.Pages.Counter.SessionMode -> Evergreen.V20.Pages.Counter.SessionMode
migrate_Pages_Counter_SessionMode old =
    case old of
        Evergreen.V19.Pages.Counter.Free ->
            Evergreen.V20.Pages.Counter.Free

        Evergreen.V19.Pages.Counter.EMOM p0 ->
            Evergreen.V20.Pages.Counter.EMOM (p0 |> migrate_Pages_Counter_EMOM_EMOMSettings)

        Evergreen.V19.Pages.Counter.Workout p0 ->
            Evergreen.V20.Pages.Counter.Workout p0

        Evergreen.V19.Pages.Counter.AMRAP p0 ->
            Evergreen.V20.Pages.Counter.AMRAP (p0 |> migrate_Pages_Counter_AMRAP_AMRAPSettings)


migrate_Pages_Home__Model : Evergreen.V19.Pages.Home_.Model -> Evergreen.V20.Pages.Home_.Model
migrate_Pages_Home__Model old =
    old


migrate_Pages_Home__Msg : Evergreen.V19.Pages.Home_.Msg -> Evergreen.V20.Pages.Home_.Msg
migrate_Pages_Home__Msg old =
    case old of
        Evergreen.V19.Pages.Home_.Redirect ->
            Evergreen.V20.Pages.Home_.Redirect


migrate_Pages_Menu_Model : Evergreen.V19.Pages.Menu.Model -> Evergreen.V20.Pages.Menu.Model
migrate_Pages_Menu_Model old =
    old


migrate_Pages_Menu_Msg : Evergreen.V19.Pages.Menu.Msg -> Evergreen.V20.Pages.Menu.Msg
migrate_Pages_Menu_Msg old =
    case old of
        Evergreen.V19.Pages.Menu.NavigateTo p0 ->
            Evergreen.V20.Pages.Menu.NavigateTo (p0 |> migrate_Route_Path_Path)


migrate_Pages_NotFound__Model : Evergreen.V19.Pages.NotFound_.Model -> Evergreen.V20.Pages.NotFound_.Model
migrate_Pages_NotFound__Model old =
    old


migrate_Pages_NotFound__Msg : Evergreen.V19.Pages.NotFound_.Msg -> Evergreen.V20.Pages.NotFound_.Msg
migrate_Pages_NotFound__Msg old =
    case old of
        Evergreen.V19.Pages.NotFound_.NoOp ->
            Evergreen.V20.Pages.NotFound_.NoOp


migrate_Pages_PickVariant_Model : Evergreen.V19.Pages.PickVariant.Model -> Evergreen.V20.Pages.PickVariant.Model
migrate_Pages_PickVariant_Model old =
    { variants = old.variants |> List.map migrate_Burpee_Burpee
    , selectedVariant = old.selectedVariant |> Maybe.map migrate_Burpee_Burpee
    , goalInput = old.goalInput
    , first = old.first
    }


migrate_Pages_PickVariant_Msg : Evergreen.V19.Pages.PickVariant.Msg -> Evergreen.V20.Pages.PickVariant.Msg
migrate_Pages_PickVariant_Msg old =
    case old of
        Evergreen.V19.Pages.PickVariant.PickedVariant p0 ->
            Evergreen.V20.Pages.PickVariant.PickedVariant (p0 |> migrate_Burpee_Burpee)

        Evergreen.V19.Pages.PickVariant.UpdateGoalInput p0 ->
            Evergreen.V20.Pages.PickVariant.UpdateGoalInput p0

        Evergreen.V19.Pages.PickVariant.StartWorkout ->
            Evergreen.V20.Pages.PickVariant.StartWorkout

        Evergreen.V19.Pages.PickVariant.NavigateBack ->
            Evergreen.V20.Pages.PickVariant.NavigateBack

        Evergreen.V19.Pages.PickVariant.BackToSelection ->
            Evergreen.V20.Pages.PickVariant.BackToSelection


migrate_Pages_Results_Model : Evergreen.V19.Pages.Results.Model -> Evergreen.V20.Pages.Results.Model
migrate_Pages_Results_Model old =
    old


migrate_Pages_Results_Msg : Evergreen.V19.Pages.Results.Msg -> Evergreen.V20.Pages.Results.Msg
migrate_Pages_Results_Msg old =
    case old of
        Evergreen.V19.Pages.Results.GotCurrentTime p0 ->
            Evergreen.V20.Pages.Results.GotCurrentTime p0

        Evergreen.V19.Pages.Results.UpdateDaysToShow p0 ->
            Evergreen.V20.Pages.Results.UpdateDaysToShow p0

        Evergreen.V19.Pages.Results.NavigateToMenu ->
            Evergreen.V20.Pages.Results.NavigateToMenu

        Evergreen.V19.Pages.Results.TogglePopover p0 ->
            Evergreen.V20.Pages.Results.TogglePopover p0

        Evergreen.V19.Pages.Results.NoOp ->
            Evergreen.V20.Pages.Results.NoOp

        Evergreen.V19.Pages.Results.CloseSlider ->
            Evergreen.V20.Pages.Results.CloseSlider


migrate_Route_Path_Path : Evergreen.V19.Route.Path.Path -> Evergreen.V20.Route.Path.Path
migrate_Route_Path_Path old =
    case old of
        Evergreen.V19.Route.Path.Home_ ->
            Evergreen.V20.Route.Path.Home_

        Evergreen.V19.Route.Path.Counter ->
            Evergreen.V20.Route.Path.Counter

        Evergreen.V19.Route.Path.Menu ->
            Evergreen.V20.Route.Path.Menu

        Evergreen.V19.Route.Path.PickVariant ->
            Evergreen.V20.Route.Path.PickVariant

        Evergreen.V19.Route.Path.Results ->
            Evergreen.V20.Route.Path.Results

        Evergreen.V19.Route.Path.NotFound_ ->
            Evergreen.V20.Route.Path.NotFound_


migrate_Shared_Model : Evergreen.V19.Shared.Model -> Evergreen.V20.Shared.Model
migrate_Shared_Model old =
    old |> migrate_Shared_Model_Model


migrate_Shared_Model_Model : Evergreen.V19.Shared.Model.Model -> Evergreen.V20.Shared.Model.Model
migrate_Shared_Model_Model old =
    { currentBurpee = old.currentBurpee |> Maybe.map migrate_Burpee_Burpee
    , workoutHistory = old.workoutHistory |> List.map migrate_WorkoutResult_WorkoutResult
    , initializing = old.initializing
    , currentTime = old.currentTime
    , version = old.version
    , timeZone = old.timeZone
    }


migrate_Shared_Msg : Evergreen.V19.Shared.Msg -> Evergreen.V20.Shared.Msg
migrate_Shared_Msg old =
    old |> migrate_Shared_Msg_Msg


migrate_Shared_Msg_Msg : Evergreen.V19.Shared.Msg.Msg -> Evergreen.V20.Shared.Msg.Msg
migrate_Shared_Msg_Msg old =
    case old of
        Evergreen.V19.Shared.Msg.BurpeePicked p0 ->
            Evergreen.V20.Shared.Msg.BurpeePicked (p0 |> migrate_Burpee_Burpee)

        Evergreen.V19.Shared.Msg.StoreWorkoutResult p0 ->
            Evergreen.V20.Shared.Msg.StoreWorkoutResult (p0 |> migrate_WorkoutResult_WorkoutResult)

        Evergreen.V19.Shared.Msg.GotPortMessage p0 ->
            Evergreen.V20.Shared.Msg.GotPortMessage p0

        Evergreen.V19.Shared.Msg.GotTimeForRepGoalCalculation p0 ->
            Evergreen.V20.Shared.Msg.GotTimeForRepGoalCalculation p0

        Evergreen.V19.Shared.Msg.GotTime p0 ->
            Evergreen.V20.Shared.Msg.GotTime p0

        Evergreen.V19.Shared.Msg.GotTimeForFakedata p0 ->
            Evergreen.V20.Shared.Msg.GotTimeForFakedata p0

        Evergreen.V19.Shared.Msg.GotTimeZone p0 ->
            Evergreen.V20.Shared.Msg.GotTimeZone p0

        Evergreen.V19.Shared.Msg.NoOp ->
            Evergreen.V20.Shared.Msg.NoOp


migrate_WorkoutResult_StoredSessionType : Evergreen.V19.WorkoutResult.StoredSessionType -> Evergreen.V20.WorkoutResult.StoredSessionType
migrate_WorkoutResult_StoredSessionType old =
    case old of
        Evergreen.V19.WorkoutResult.StoredAMRAP p0 ->
            Evergreen.V20.WorkoutResult.StoredAMRAP p0

        Evergreen.V19.WorkoutResult.StoredEMOM ->
            Evergreen.V20.WorkoutResult.StoredEMOM

        Evergreen.V19.WorkoutResult.StoredWorkout ->
            Evergreen.V20.WorkoutResult.StoredWorkout

        Evergreen.V19.WorkoutResult.StoredFree ->
            Evergreen.V20.WorkoutResult.StoredFree


migrate_WorkoutResult_WorkoutResult : Evergreen.V19.WorkoutResult.WorkoutResult -> Evergreen.V20.WorkoutResult.WorkoutResult
migrate_WorkoutResult_WorkoutResult old =
    { reps = old.reps
    , repGoal = old.repGoal
    , burpee = old.burpee |> migrate_Burpee_Burpee
    , timestamp = old.timestamp
    , sessionType = old.sessionType |> Maybe.map migrate_WorkoutResult_StoredSessionType
    }
